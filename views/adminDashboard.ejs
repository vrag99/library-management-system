<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('./partials/head'); %>
    <title>Admin</title>
  </head>

  <body>
    <div class="container">
      <nav>
        <ol class="breadcrumb p-3 rounded-3">
          <li class="breadcrumb-item">
            <a class="link-body-emphasis" href="/">
              <i class="bi bi-house-door-fill"></i>
              <span class="visually-hidden">Home</span>
            </a>
          </li>
          <li class="breadcrumb-item">
            <a
              class="link-body-emphasis fw-semibold text-decoration-none"
              href="/adminDashboard"
            >
              <%= data.username %>'s dashboard (admin)
            </a>
          </li>
          <% if (data.state=='all' ) { %>
          <li class="breadcrumb-item active">
            <a
              class="link-body-emphasis fw-semibold text-decoration-none"
              href="/adminDashboard"
              >all books</a
            >
          </li>
          <% } else if (data.state=='issue-req' ) { %>
          <li class="breadcrumb-item active">
            <a
              class="link-body-emphasis fw-semibold text-decoration-none"
              href="/adminDashboard/issue-requests"
              >requested books</a
            >
          </li>

          <% } else if (data.state=='return-requests' ) { %>
          <li class="breadcrumb-item active">
            <a
              class="link-body-emphasis fw-semibold text-decoration-none"
              href="/adminDashboard/return-requests"
              >to-be-returned books</a
            >
          </li>
          <% } %>

          <li class="ms-auto">
            <a href="/logout" class="btn btn-dark btn-sm">Logout</a>
          </li>
        </ol>
      </nav>
    </div>

    <div class="container">
      <form class="bg-body-tertiary pt-3 rounded-3">
        <div class="row">
          <div class="col-md-3 mt-1 fs-4 text-center">View type</div>
          <div class="col-md-8 text-center">
            <select
              class="form-select fs-5 text-center mb-3"
              id="viewMode"
              aria-label=".form-select-lg example"
            >
              <option value="select view mode" selected>
                select view mode
              </option>
              <option value="all">all books</option>
              <option value="issue-requests">issue requests</option>
              <option value="return-requests">return requests</option>
            </select>
          </div>
        </div>
      </form>
    </div>

    <% if (data.state=='all') { %>
    <div class="container mt-4 mb-5">
      <form method="post" class="bg-body-tertiary p-3 rounded-3">
        <h2 class="text-center pb-3">Add new book</h2>
        <div class="row mb-3">
          <div class="col-md-6">
            <input
              type="text"
              class="form-control"
              id="bookName"
              name="bookName"
              placeholder="Name of the book"
              required
            />
          </div>
          <div class="col-md-6">
            <input
              type="text"
              class="form-control"
              id="bookQty"
              name="bookQty"
              placeholder="Quantity"
              required
            />
          </div>
        </div>
        <div class="row">
          <div class="col"></div>
          <div class="col d-grid">
            <button type="submit" class="btn btn-dark">Add</button>
          </div>
          <div class="col"></div>
        </div>
      </form>
    </div>
    <% } %>

    <div class="container mt-4">
      <h2 class="text-center mt-4 mb-3 fw-bold text-uppercase">
        <%= (data.state) %>
      </h2>
      <% if (data.state=='all' ) { %>
      <table class="table text-center table-hover align-middle">
        <thead>
          <th>Book Name</th>
          <th>Total Quantity</th>
          <th>Available Quantity</th>
          <th>Actions</th>
        </thead>
        <% for( let i=0; i < data.books.length; i++ ) { %>
        <tr>
          <td><%= (data.books[i].book_name) %></td>
          <td><%= (data.books[i].quantity) %></td>
          <td><%= (data.books[i].available_qty) %></td>
          <td>
            <button
              class="btn btn-dark btn-sm"
              id="<%= (data.books[i].id) %>"
              onclick="addBook(this)"
            >
              <i class="bi bi-plus-lg"></i>
            </button>
            <button
              class="btn btn-dark btn-sm"
              id="<%= (data.books[i].id) %>"
              value="<%= (data.books[i].quantity) %>"
              data-available = "<%= (data.books[i].available_qty) %>"
              onclick="removeBook(this)"
            >
              <i class="bi bi-dash-lg"></i>
            </button>
          </td>
        </tr>
        <% } %>
      </table>

      <% } else if (data.state=='issue-req') { %>
      <table class="table text-center table-hover align-middle">
        <thead>
          <th>Request ID</th>
          <th>Username</th>
          <th>Book</th>
          <th>Accept/Reject</th>
        </thead>
        <% for( let i=0; i < data.req.length; i++ ) { %>
        <tr>
          <td><%= (data.req[i].id) %></td>
          <td><%= (data.req[i].username) %></td>
          <td><%= (data.req[i].book_name) %></td>
          <td>
            <a
              href="/adminDashboard/issue-requests/accept/<%= (data.req[i].id) %>"
              class="btn btn-dark btn-sm"
            >
              <i class="bi bi-check2"></i>
            </a>
            <a
              href="/adminDashboard/issue-requests/reject/<%= (data.req[i].id) %>"
              class="btn btn-dark btn-sm"
            >
              <i class="bi bi-x-lg"></i>
            </a>
          </td>
        </tr>
        <% } %>
      </table>

      <% } else if (data.state=='return-req') { %>
      <table class="table text-center table-hover align-middle">
        <thead>
          <th>Request ID</th>
          <th>Username</th>
          <th>Book</th>
          <th>Accept/Reject</th>
        </thead>
        <% for( let i=0; i < data.req.length; i++ ) { %>
        <tr>
          <td><%= (data.req[i].id) %></td>
          <td><%= (data.req[i].username) %></td>
          <td><%= (data.req[i].book_name) %></td>
          <td>
            <a
              href="/adminDashboard/return-requests/accept/<%= (data.req[i].id) %>"
              class="btn btn-dark btn-sm"
            >
              <i class="bi bi-check2"></i>
            </a>
            <a
              href="/adminDashboard/return-requests/reject/<%= (data.req[i].id) %>"
              class="btn btn-dark btn-sm"
            >
              <i class="bi bi-x-lg"></i>
            </a>
          </td>
        </tr>
        <% } %>
      </table>
      <% } %>
    </div>
  </body>

  <script>
    function goTo(link){
        a = document.createElement('a');
        a.href = link;
        a.click();
    }

    async function addBook(btn) {
      var addedQty = prompt("Enter the no. of books to add");
      if (addedQty < 0) {
        alert("No. of books must be positive");
      } else {
        await axios
          .get("/adminDashboard", {
            params: {
              id: btn.id,
              addedQty: addedQty,
            },
          })
          .then(async (res) => {
            
            await Swal.fire({
                  title: "Added Successfully!",
                  icon: "success",
                  showConfirmButton: false,
                  timer: 1000,
              });
            window.location.reload();
          });
      }
    }

    async function removeBook(btn) {
      var rmQty = parseInt(prompt("Enter the no. of books to remove"));
      if (rmQty < 0) {
        alert("No. of books must be positive");
      } else if (btn.dataset.available<rmQty){
        alert("Can't remove more books than they exist.")
      } else if (isNaN(rmQty)){
        window.location.reload();
      }
      else {
        await axios
          .get("/adminDashboard", {
            params: {
              id: btn.id,
              rmQty: rmQty,
            },
          })
          .then(async (res) => {
            await Swal.fire({
                  title: "Removed Successfully!",
                  icon: "success",
                  showConfirmButton: false,
                  timer: 1000,
              });
            }).catch(async (err)=>{
              await Swal.fire({
                    title: "Clear pending requests first",
                    icon: "error",
                    showConfirmButton: false,
                    timer: 1000
                });
 
          })
        window.location.reload();
      }
    }

    var viewMode = document.getElementById('viewMode');
    viewMode.addEventListener('change', ()=>{
        var mode = viewMode.value;
        if(mode!='all') goTo(`/adminDashboard/${mode}`);
        else goTo('/adminDashboard');
    })

    <% if (data.error == 'duplicateBookEntry') { %>
        Swal.fire({
            title: "The book already exists!",
            icon: "error",
            showConfirmButton: false,
            timer: 2000,
          });
    <% } %>
  </script>
</html>
